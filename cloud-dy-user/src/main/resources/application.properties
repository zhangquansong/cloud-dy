# 数据源 ds0,ds1
sharding.jdbc.datasource.names=dy0,dy1
# 第一个数据库
sharding.jdbc.datasource.dy0.type=com.zaxxer.hikari.HikariDataSource
sharding.jdbc.datasource.dy0.driver-class-name=com.mysql.jdbc.Driver
sharding.jdbc.datasource.dy0.jdbc-url=jdbc:mysql://rm-8vb9p9sf9i777kv2k7o.mysql.zhangbei.rds.aliyuncs.com:3306/dy0?characterEncoding=utf-8&serverTimezone=GMT%2B8
sharding.jdbc.datasource.dy0.username=cloud_dy_mysql
sharding.jdbc.datasource.dy0.password=Songmei11

# 第二个数据库
sharding.jdbc.datasource.dy1.type=com.zaxxer.hikari.HikariDataSource
sharding.jdbc.datasource.dy1.driver-class-name=com.mysql.jdbc.Driver
sharding.jdbc.datasource.dy1.jdbc-url=jdbc:mysql://rm-8vb9p9sf9i777kv2k7o.mysql.zhangbei.rds.aliyuncs.com:3306/dy1?characterEncoding=utf-8&serverTimezone=GMT%2B8
sharding.jdbc.datasource.dy1.username=cloud_dy_mysql
sharding.jdbc.datasource.dy1.password=Songmei11

# 水平拆分的数据库（表） 配置分库 + 分表策略 行表达式分片策略
# 分库策略
sharding.jdbc.config.sharding.default-database-strategy.inline.sharding-column=id
sharding.jdbc.config.sharding.default-database-strategy.inline.algorithm-expression=dy$->{id % 2}

# 分表策略 其中user为逻辑表 分表主要取决于user_sex行
sharding.jdbc.config.sharding.tables.user.actual-data-nodes=dy$->{0..1}.user_$->{0..1}
sharding.jdbc.config.sharding.tables.user.table-strategy.inline.sharding-column=user_sex
# 分片算法表达式
sharding.jdbc.config.sharding.tables.user.table-strategy.inline.algorithm-expression=user_$->{user_sex % 2}

# 主键 UUID 18位数 如果是分布式还要进行一个设置 防止主键重复
sharding.jdbc.config.sharding.tables.user.key-generator-column-name=id

# 打印执行的数据库以及语句
sharding.jdbc.config.props..sql.show=true
spring.main.allow-bean-definition-overriding=true